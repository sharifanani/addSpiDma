=============================================================================
List of generated methods in project: k60_spi_dma

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "SPI1"      (component Init_SPI_VAR0)
   - SPI1_Init -This method initializes registers of the SPI module according to the Peripheral Initialization settings. Call 
                this method in user code to initialize the module. By default, the method is called by PE automatically; see 
                "Call Init method" property of the component for more details.

Module "DMA1"      (component DMAController)

Module "DMACH1"    (component DMAChannel_LDD)
   - DMACH1_Init -Initializes the DMAChannel_LDD component. This method allocates no memory. Memory for all DMA used channles 
                is allocated by DMAController componet .  This method can be called only once. Before the second call of Init() 
                the Deinit() must be called first.
   - DMACH1_Enable -Enables the DMAChannel_LDD component.
   - DMACH1_Disable -Disables the DMAChannel_LDD component.
   - DMACH1_EnableRequest -The method enables request from peripheral. Please note that this method doesn't start the transfer. 
                The transfer is started as soon as DMA request from peripheral is asserted.
   - DMACH1_DisableRequest -The method disables DMA request from peripheral. Request can also by disabled automatically by the 
                DMA hardware if "<Disable request after transfer done>" property is set to "yes" value.
   - DMACH1_StartTransfer -The method starts DMA transfer on the selected DMA channel. This methods initiates explicit SW 
                transfer request. Please note that call of this method if peripheral request is enabled can cause unpredictable 
                behaviour.
   - DMACH1_GetTransferCompleteStatus -This method returns value of "Transfer done" flag and clears this flag if it was set. It 
                is intended to be used in pooling mode (<Interrupt service> = Disabled) to check transfer state. Please note 
                that in pooling mode the <Main()> method must be called before this method is called.
   - DMACH1_GetError -Returns channel error flags and clears these flags.
   - DMACH1_SetSourceAddress -Sets source(read) transaction address.
   - DMACH1_SetDestinationAddress -Sets destination(write) transaction address.
   - DMACH1_SetTransactionCount -Sets number of R/W transaction performed after next request is asserted. Please note the this 
                value doesn't represent number of transferred bytes but number on R/W transaction units.
   - DMACH1_SetRequestCount -Sets number of requests required to complete transfer.

Module "DMACH2"    (component DMAChannel_LDD)
   - DMACH2_Init -Initializes the DMAChannel_LDD component. This method allocates no memory. Memory for all DMA used channles 
                is allocated by DMAController componet .  This method can be called only once. Before the second call of Init() 
                the Deinit() must be called first.
   - DMACH2_Enable -Enables the DMAChannel_LDD component.
   - DMACH2_Disable -Disables the DMAChannel_LDD component.
   - DMACH2_EnableRequest -The method enables request from peripheral. Please note that this method doesn't start the transfer. 
                The transfer is started as soon as DMA request from peripheral is asserted.
   - DMACH2_DisableRequest -The method disables DMA request from peripheral. Request can also by disabled automatically by the 
                DMA hardware if "<Disable request after transfer done>" property is set to "yes" value.
   - DMACH2_StartTransfer -The method starts DMA transfer on the selected DMA channel. This methods initiates explicit SW 
                transfer request. Please note that call of this method if peripheral request is enabled can cause unpredictable 
                behaviour.
   - DMACH2_GetTransferCompleteStatus -This method returns value of "Transfer done" flag and clears this flag if it was set. It 
                is intended to be used in pooling mode (<Interrupt service> = Disabled) to check transfer state. Please note 
                that in pooling mode the <Main()> method must be called before this method is called.
   - DMACH2_GetError -Returns channel error flags and clears these flags.
   - DMACH2_SetSourceAddress -Sets source(read) transaction address.
   - DMACH2_SetDestinationAddress -Sets destination(write) transaction address.
   - DMACH2_SetTransactionCount -Sets number of R/W transaction performed after next request is asserted. Please note the this 
                value doesn't represent number of transferred bytes but number on R/W transaction units.
   - DMACH2_SetRequestCount -Sets number of requests required to complete transfer.

Module "SPI2"      (component Init_SPI_VAR0)
   - SPI2_Init -This method initializes registers of the SPI module according to the Peripheral Initialization settings. Call 
                this method in user code to initialize the module. By default, the method is called by PE automatically; see 
                "Call Init method" property of the component for more details.

Module "Cpu"       (component MK60DN512LQ10)

===================================================================================
